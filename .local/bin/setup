#!/bin/sh

# Initial setup for dotfiles
#
# Copyright (C) 2023 Demis Balbach <db@minikn.xyz>

# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without
# modifications, as long as this notice is preserved.

# After cloning this repo, set execution bit on this file.
# Then, in the root dir of the repo, run
#
# .local/bin/setup .config/packages
#
# This will install all packages defined in .config/packages,
# activate services and symlink all dot files. After that,
# dont' runt this file again. Instead, run `sp` to sync
# packages.

chmod +x .local/bin/*

# Sync packages
echo "Syncing packages ..."
.local/bin/sp $1

# Window manager
if ! [ -x "$(command -v ly)" ]; then
	echo "Building and installing window manager ..."

	## Installing runtime dependencies
	sudo apt -y install libpam0g-dev libxcb-xkb-dev

	## Getting source code
	rm -rf /tmp/ly
	git clone --recurse-submodules https://github.com/fairyglade/ly /tmp/ly
	cd /tmp/ly

	## Building and installing
	make
	sudo make install installsystemd
	sudo systemctl enable ly
	exit
fi


# rofi-wayland
if ! [ -x "$(command -v rofi)" ]; then
	echo "Building and installing rofi ..."
	## Installing dependencies
	sudo apt install -y libglib2.0-dev libcairo-dev libpango1.0-dev libxkbcommon-dev \
		libgdk-pixbuf2.0-dev libxcb-util-dev libxkbcommon-x11-dev libxcb-icccm4-dev \
		libxcb-ewmh-dev libxcb-randr0-dev libxcb-cursor-dev libxcb-xinerama0-dev \
		libstartup-notification0-dev librust-wayland-client-dev flex bison
	
	## Getting source code
	rm -rf /tmp/rofi
	git clone https://github.com/lbonn/rofi /tmp/rofi
	cd /tmp/rofi
	git submodule update --init
	
	## Building and installing
	meson setup build
	ninja -C build
	sudo ninja -C build install
	exit
fi

# swappy
if ! [ -x "$(command -v swappy)" ]; then
	echo "Building and installing swappy ..."

	# Installding dependencies
	sudo apt install -y libgtk-3-bin libgtk-3-common libgtk-3-dev gettext

	## Getting source code
	rm -rf /tmp/swappy
	git clone https://github.com/jtheoof/swappy /tmp/swappy
	cd /tmp/swappy
	
	## Building and installing
	meson setup build
	ninja -C build
	sudo ninja -C build install
	exit
fi

# tessen
if ! [ -x "$(command -v tessen)" ]; then
	echo "Building and installing tessen ..."
	## Installing dependencies
	sudo apt install -y pass pass-otp libnotify-bin
	
	## Getting source code
	rm -rf /tmp/tessen
	git clone https://github.com/ayushnix/tessen /tmp/tessen
	cd /tmp/tessen
	
	## Building and installing
	sudo make minimal
	exit
fi

# nix
if ! [ -x "$(command -v nix)" ]; then
	sudo rm -rf /nix
	sudo mkdir /nix
	sudo chown "$USER" /nix
	curl -L https://nixos.org/nix/install | sh -s -- --no-daemon
fi

# fonts
if [ ! -d "$HOME/.local/share/fonts" ]; then
	echo "Installing fonts ..."
       	mkdir -p ~/.local/share/fonts
	sudo apt -y install wget unzip
fi


for font in Iosevka NerdFontsSymbolsOnly; do
	if [ ! -d "$HOME/.local/share/fonts/$font" ]; then
		echo "Installing $font ..."
		wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/$font.zip
		unzip $font.zip -d $HOME/.local/share/fonts/$font/
        	rm $font.zip
	fi
done
fc-cache

# Enable services
sudo systemctl enable acpid
sudo systemctl enable avahi-daemon

# Symlinking
.local/bin/sl $(pwd)
