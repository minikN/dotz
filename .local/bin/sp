#!/bin/sh

# Simple apt package syncing using a provided file.
#
# Copyright (C) 2023 Demis Balbach <db@minikn.xyz>

# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without
# modifications, as long as this notice is preserved.


# Script can either be run with a param specifying the file,
# or "$XDG_CONFIG_HOME/packages" will be used.
# 
# Running "sudo apt install ..." manually defeats the purpose
# of this script. Edit the packages file and run this script.

DESTDIR=${1:-$XDG_CONFIG_HOME/packages}
PACKAGES=$(grep -v '^#' "$DESTDIR")

# Colors
RED="\033[1;31m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
BOLD="\033[1m"
RESET="\033[0m"

deletedCount=0
installedCount=0

notify () {
	if [ -x "$(command -v notify-send)" ]; then
		notify-send -t 5000 "$1" "$2" 
	fi
}

echo "> ${YELLOW}Using${RESET} $DESTDIR ..."
echo "> ${GREEN} Syncing packages${RESET} ..."

for package in $PACKAGES; do
	deletePackage=false
	
	# delete
	if echo $package | grep -q -i -E '^\$'; then
		sed -i --follow-symlinks "/$package/d" $DESTDIR
		package=$(echo "$package" | cut -d "$" -f2)
		deletePackage=true
	fi

	#nix
	if echo $package | grep -q -i -E '^nix:'; then
		nixPkgName=$(echo "$package" | cut -d ":" -f2)
		nixPkgExe=$(echo "$nixPkgName" | cut -d "." -f2)
		if $deletePackage; then
			notify "Removing $nixPkgExe through nix ..." 
			echo -n " > ${RED}Removing${RESET} $nixPkgExe through nix ... "
			if nix-env --uninstall "$nixPkgExe" > /dev/null 2>&1; then
				deletedCount=$((deletedCount+1))
				echo "${GREEN}Done${RESET}."
			fi
		elif ! nix-env -q | grep -q "$nixPkgExe"; then
			notify "Installing $nixPkgExe through nix ..." 
			echo -n " > ${YELLOW}Installing${RESET} $nixPkgExe through nix ... "
			if nix-env -iA "nixpkgs.$nixPkgName" > /dev/null 2>&1; then
					installedCount=$((installedCount+1))
					echo "${GREEN}Done${RESET}."
			fi
		fi
		continue
	fi

	# apt remove
	if $deletePackage; then
		notify "Removing $package ..." 
		echo -n " > ${RED}Removing${RESET} $package ... "
		if sudo apt-get -y remove $package > /dev/null; then
			deletedCount=$((deletedCount+1))
			echo "${GREEN}Done${RESET}."
		fi
		continue
	fi

	# apt
	if ! dpkg-query --show --showformat='${Status}\n' "$package" | grep -q 'install ok installed'; then
		notify "Installing $package ..." 
		echo -n " > ${YELLOW}Installing${RESET} $package ... "
		if sudo apt-get -y install $package > /dev/null; then
			installedCount=$((installedCount+1))
			echo "${GREEN}Done${RESET}."
		fi
	fi
	continue
done

if [ $deletedCount -gt 0 ]; then
	echo -n "> Cleaning up ... "
	if sudo apt-get -y autoremove > /dev/null; then
		echo "${GREEN}Done${RESET}."
	fi
fi

notify "Packages synced." "$installedCount packages installed.\n$deletedCount packages removed."
echo "> ${GREEN}$installedCount${RESET} packages installed."
echo "> ${RED}$deletedCount${RESET} packages removed." 
